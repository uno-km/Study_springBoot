{"version":3,"sources":["js/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","state","item","this","ListItem","Checkbox","checked","done","ListItemText","InputBase","inputProps","type","id","name","value","title","multiline","fullWidth","React","Component","App","items","todoItems","length","Paper","style","margin","List","map","idx","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA6BeA,E,kDAzBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAAEC,KAAMF,EAAME,MAFZ,E,0CAKnB,WACI,IAAMA,EAAOC,KAAKF,MAAMC,KACxB,OACI,eAACE,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAUC,QAASJ,EAAKK,OACxB,cAACC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CACAC,WAAY,CAAE,aAAa,SAC3BC,KAAK,OACLC,GAAIV,EAAKU,GACTC,KAAMX,EAAKU,GACXE,MAAOZ,EAAKa,MACRC,WAAW,EACXC,WAAW,a,GAnBZC,IAAMC,W,gBC6BVC,G,wDA1Bb,WAAYpB,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACRoB,MAAQ,CACR,CAAET,GAAK,SAAUG,MAAQ,kEAAiBR,MAAK,GAC/C,CAAEK,GAAK,SAAUG,MAAQ,2FAAsBR,MAAK,KALvC,E,0CASpB,WACE,IAAIe,EAAYnB,KAAKF,MAAMoB,MAAME,OAAS,GACxC,cAACC,EAAA,EAAD,CAAOC,MAAO,CAAEC,OAAQ,IAAxB,SACE,cAACC,EAAA,EAAD,UACCxB,KAAKF,MAAMoB,MAAMO,KAAI,SAAC1B,EAAM2B,GAAP,OAClB,cAAC,EAAD,CAAM3B,KAAMA,GAAWA,EAAKU,WAKlC,OAAO,qBAAKkB,UAAU,MAAf,SAAsBR,Q,GApBfJ,IAAMC,YCOTY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1Bb,M","file":"static/js/main.6f8c5fda.chunk.js","sourcesContent":["import React from 'react';\r\nimport { ListItem, ListItemText, InputBase, Checkbox} from \"@material-ui/core\";\r\n\r\nclass Todo extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { item: props.item};\r\n      }\r\n\r\n    render(){\r\n        const item = this.state.item;\r\n        return (\r\n            <ListItem>\r\n                <Checkbox checked={item.done}/>\r\n                <ListItemText>\r\n                <InputBase\r\n                inputProps={{ \"aria-label\":\"naked\"}}\r\n                type=\"text\"\r\n                id={item.id}\r\n                name={item.id}\r\n                value={item.title}\r\n                    multiline={true}\r\n                    fullWidth={true}\r\n                />\r\n                </ListItemText>\r\n            </ListItem>\r\n        );\r\n    }\r\n}\r\nexport default Todo;","import React from 'react';\nimport Todo from './js/Todo';\nimport { Paper, List }  from \"@material-ui/core\";\nimport './App.css';\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n       items : [\n       { id : \"unoKim\", title : \"안녕하세요 반갑습니다!!\", done:true },\n       { id : \"gdHong\", title : \"날씨가 춥습니다. 감기조심하세요!\", done:false },\n        ],\n      };\n  }\nrender() {\n  var todoItems = this.state.items.length > 0 && (\n    <Paper style={{ margin: 16 }}>\n      <List>\n      {this.state.items.map((item, idx) => (\n          <Todo item={item} key={item.id} />\n          ))}\n        </List>\n      </Paper>\n    );\n    return <div className=\"App\">{todoItems}</div>;\n  }\n}\n    \n\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}