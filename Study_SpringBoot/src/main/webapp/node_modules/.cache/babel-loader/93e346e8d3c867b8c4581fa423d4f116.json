{"ast":null,"code":"import { API_BASE_URL } from \"../api-config\";\nexport function call(api, method, request) {\n  let options = {\n    headers: new Headers({\n      \"Content-Type\": \"application/json\"\n    }),\n    url: API_BASE_URL + api,\n    method: method\n  };\n\n  if (request) {\n    // GET method\n    options.body = JSON.stringify(request);\n  }\n\n  return fetch(options.url, options).then(response => response.json().then(json => {\n    if (!response.ok) {\n      // response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\n      return Promise.reject(json);\n    }\n\n    return json;\n  })).catch(error => {\n    // 추가된 부분\n    console.log(error.status);\n\n    if (error.status === 403) {\n      window.location.href = \"/login\"; // redirect\n    }\n\n    return Promise.reject(error);\n  });\n}\nexport function signin(userDTO) {\n  return call(\"/auth/signin\", \"POST\", userDTO).then.log(\"response : \" + response.token);\n  alert(\"로그인 토큰 : \" + response.token);\n}\n;","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/src/js/service/ApiService.js"],"names":["API_BASE_URL","call","api","method","request","options","headers","Headers","url","body","JSON","stringify","fetch","then","response","json","ok","Promise","reject","catch","error","console","log","status","window","location","href","signin","userDTO","token","alert"],"mappings":"AAAA,SAASA,YAAT,QAA6B,eAA7B;AAGA,OAAO,SAASC,IAAT,CAAcC,GAAd,EAAmBC,MAAnB,EAA2BC,OAA3B,EAAoC;AACzC,MAAIC,OAAO,GAAG;AACZC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,sBAAgB;AADG,KAAZ,CADG;AAIZC,IAAAA,GAAG,EAAER,YAAY,GAAGE,GAJR;AAKZC,IAAAA,MAAM,EAAEA;AALI,GAAd;;AAOA,MAAIC,OAAJ,EAAa;AACX;AACAC,IAAAA,OAAO,CAACI,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAAf;AACD;;AACD,SAAOQ,KAAK,CAACP,OAAO,CAACG,GAAT,EAAcH,OAAd,CAAL,CACJQ,IADI,CACEC,QAAD,IACJA,QAAQ,CAACC,IAAT,GAAgBF,IAAhB,CAAsBE,IAAD,IAAU;AAC7B,QAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;AAChB;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP;AACD;;AACD,WAAOA,IAAP;AACD,GAND,CAFG,EAUJI,KAVI,CAUGC,KAAD,IAAW;AAChB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAlB;;AACA,QAAIH,KAAK,CAACG,MAAN,KAAiB,GAArB,EAA0B;AACxBC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB,CADwB,CACS;AAClC;;AACD,WAAOT,OAAO,CAACC,MAAR,CAAeE,KAAf,CAAP;AACD,GAjBI,CAAP;AAkBD;AACD,OAAO,SAASO,MAAT,CAAgBC,OAAhB,EAAwB;AAC7B,SAAO3B,IAAI,CAAC,cAAD,EAAgB,MAAhB,EAAuB2B,OAAvB,CAAJ,CAAoCf,IAApC,CAAyCS,GAAzC,CAA6C,gBAAgBR,QAAQ,CAACe,KAAtE,CAAP;AACAC,EAAAA,KAAK,CAAC,cAAchB,QAAQ,CAACe,KAAxB,CAAL;AACD;AAAA","sourcesContent":["import { API_BASE_URL } from \"../api-config\";\r\n\r\n\r\nexport function call(api, method, request) {\r\n  let options = {\r\n    headers: new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    }),\r\n    url: API_BASE_URL + api,\r\n    method: method,\r\n  };\r\n  if (request) {\r\n    // GET method\r\n    options.body = JSON.stringify(request);\r\n  }\r\n  return fetch(options.url, options)\r\n    .then((response) =>\r\n      response.json().then((json) => {\r\n        if (!response.ok) {\r\n          // response.ok가 true이면 정상적인 리스폰스를 받은것, 아니면 에러 리스폰스를 받은것.\r\n          return Promise.reject(json);\r\n        }\r\n        return json;\r\n      })\r\n    )\r\n    .catch((error) => {\r\n      // 추가된 부분\r\n      console.log(error.status);\r\n      if (error.status === 403) {\r\n        window.location.href = \"/login\"; // redirect\r\n      }\r\n      return Promise.reject(error);\r\n    });\r\n}\r\nexport function signin(userDTO){\r\n  return call(\"/auth/signin\",\"POST\",userDTO).then.log(\"response : \" + response.token);\r\n  alert(\"로그인 토큰 : \" + response.token);\r\n};"]},"metadata":{},"sourceType":"module"}