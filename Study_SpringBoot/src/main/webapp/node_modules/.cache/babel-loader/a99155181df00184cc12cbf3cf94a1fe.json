{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getBindingIdentifiers;\n\nvar _generated = require(\"../validators/generated\");\n\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\n  let search = [].concat(node);\n  const ids = Object.create(null);\n\n  while (search.length) {\n    const id = search.shift();\n    if (!id) continue;\n    const keys = getBindingIdentifiers.keys[id.type];\n\n    if ((0, _generated.isIdentifier)(id)) {\n      if (duplicates) {\n        const _ids = ids[id.name] = ids[id.name] || [];\n\n        _ids.push(id);\n      } else {\n        ids[id.name] = id;\n      }\n\n      continue;\n    }\n\n    if ((0, _generated.isExportDeclaration)(id) && !(0, _generated.isExportAllDeclaration)(id)) {\n      if ((0, _generated.isDeclaration)(id.declaration)) {\n        search.push(id.declaration);\n      }\n\n      continue;\n    }\n\n    if (outerOnly) {\n      if ((0, _generated.isFunctionDeclaration)(id)) {\n        search.push(id.id);\n        continue;\n      }\n\n      if ((0, _generated.isFunctionExpression)(id)) {\n        continue;\n      }\n    }\n\n    if (keys) {\n      for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n\n        if (id[key]) {\n          search = search.concat(id[key]);\n        }\n      }\n    }\n  }\n\n  return ids;\n}\n\ngetBindingIdentifiers.keys = {\n  DeclareClass: [\"id\"],\n  DeclareFunction: [\"id\"],\n  DeclareModule: [\"id\"],\n  DeclareVariable: [\"id\"],\n  DeclareInterface: [\"id\"],\n  DeclareTypeAlias: [\"id\"],\n  DeclareOpaqueType: [\"id\"],\n  InterfaceDeclaration: [\"id\"],\n  TypeAlias: [\"id\"],\n  OpaqueType: [\"id\"],\n  CatchClause: [\"param\"],\n  LabeledStatement: [\"label\"],\n  UnaryExpression: [\"argument\"],\n  AssignmentExpression: [\"left\"],\n  ImportSpecifier: [\"local\"],\n  ImportNamespaceSpecifier: [\"local\"],\n  ImportDefaultSpecifier: [\"local\"],\n  ImportDeclaration: [\"specifiers\"],\n  ExportSpecifier: [\"exported\"],\n  ExportNamespaceSpecifier: [\"exported\"],\n  ExportDefaultSpecifier: [\"exported\"],\n  FunctionDeclaration: [\"id\", \"params\"],\n  FunctionExpression: [\"id\", \"params\"],\n  ArrowFunctionExpression: [\"params\"],\n  ObjectMethod: [\"params\"],\n  ClassMethod: [\"params\"],\n  ClassPrivateMethod: [\"params\"],\n  ForInStatement: [\"left\"],\n  ForOfStatement: [\"left\"],\n  ClassDeclaration: [\"id\"],\n  ClassExpression: [\"id\"],\n  RestElement: [\"argument\"],\n  UpdateExpression: [\"argument\"],\n  ObjectProperty: [\"value\"],\n  AssignmentPattern: [\"left\"],\n  ArrayPattern: [\"elements\"],\n  ObjectPattern: [\"properties\"],\n  VariableDeclaration: [\"declarations\"],\n  VariableDeclarator: [\"id\"]\n};","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/node_modules/@babel/types/lib/retrievers/getBindingIdentifiers.js"],"names":["Object","defineProperty","exports","value","default","getBindingIdentifiers","_generated","require","node","duplicates","outerOnly","search","concat","ids","create","length","id","shift","keys","type","isIdentifier","_ids","name","push","isExportDeclaration","isExportAllDeclaration","isDeclaration","declaration","isFunctionDeclaration","isFunctionExpression","i","key","DeclareClass","DeclareFunction","DeclareModule","DeclareVariable","DeclareInterface","DeclareTypeAlias","DeclareOpaqueType","InterfaceDeclaration","TypeAlias","OpaqueType","CatchClause","LabeledStatement","UnaryExpression","AssignmentExpression","ImportSpecifier","ImportNamespaceSpecifier","ImportDefaultSpecifier","ImportDeclaration","ExportSpecifier","ExportNamespaceSpecifier","ExportDefaultSpecifier","FunctionDeclaration","FunctionExpression","ArrowFunctionExpression","ObjectMethod","ClassMethod","ClassPrivateMethod","ForInStatement","ForOfStatement","ClassDeclaration","ClassExpression","RestElement","UpdateExpression","ObjectProperty","AssignmentPattern","ArrayPattern","ObjectPattern","VariableDeclaration","VariableDeclarator"],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = getBindingIdentifiers;\r\n\r\nvar _generated = require(\"../validators/generated\");\r\n\r\nfunction getBindingIdentifiers(node, duplicates, outerOnly) {\r\n  let search = [].concat(node);\r\n  const ids = Object.create(null);\r\n\r\n  while (search.length) {\r\n    const id = search.shift();\r\n    if (!id) continue;\r\n    const keys = getBindingIdentifiers.keys[id.type];\r\n\r\n    if ((0, _generated.isIdentifier)(id)) {\r\n      if (duplicates) {\r\n        const _ids = ids[id.name] = ids[id.name] || [];\r\n\r\n        _ids.push(id);\r\n      } else {\r\n        ids[id.name] = id;\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    if ((0, _generated.isExportDeclaration)(id) && !(0, _generated.isExportAllDeclaration)(id)) {\r\n      if ((0, _generated.isDeclaration)(id.declaration)) {\r\n        search.push(id.declaration);\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    if (outerOnly) {\r\n      if ((0, _generated.isFunctionDeclaration)(id)) {\r\n        search.push(id.id);\r\n        continue;\r\n      }\r\n\r\n      if ((0, _generated.isFunctionExpression)(id)) {\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (keys) {\r\n      for (let i = 0; i < keys.length; i++) {\r\n        const key = keys[i];\r\n\r\n        if (id[key]) {\r\n          search = search.concat(id[key]);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return ids;\r\n}\r\n\r\ngetBindingIdentifiers.keys = {\r\n  DeclareClass: [\"id\"],\r\n  DeclareFunction: [\"id\"],\r\n  DeclareModule: [\"id\"],\r\n  DeclareVariable: [\"id\"],\r\n  DeclareInterface: [\"id\"],\r\n  DeclareTypeAlias: [\"id\"],\r\n  DeclareOpaqueType: [\"id\"],\r\n  InterfaceDeclaration: [\"id\"],\r\n  TypeAlias: [\"id\"],\r\n  OpaqueType: [\"id\"],\r\n  CatchClause: [\"param\"],\r\n  LabeledStatement: [\"label\"],\r\n  UnaryExpression: [\"argument\"],\r\n  AssignmentExpression: [\"left\"],\r\n  ImportSpecifier: [\"local\"],\r\n  ImportNamespaceSpecifier: [\"local\"],\r\n  ImportDefaultSpecifier: [\"local\"],\r\n  ImportDeclaration: [\"specifiers\"],\r\n  ExportSpecifier: [\"exported\"],\r\n  ExportNamespaceSpecifier: [\"exported\"],\r\n  ExportDefaultSpecifier: [\"exported\"],\r\n  FunctionDeclaration: [\"id\", \"params\"],\r\n  FunctionExpression: [\"id\", \"params\"],\r\n  ArrowFunctionExpression: [\"params\"],\r\n  ObjectMethod: [\"params\"],\r\n  ClassMethod: [\"params\"],\r\n  ClassPrivateMethod: [\"params\"],\r\n  ForInStatement: [\"left\"],\r\n  ForOfStatement: [\"left\"],\r\n  ClassDeclaration: [\"id\"],\r\n  ClassExpression: [\"id\"],\r\n  RestElement: [\"argument\"],\r\n  UpdateExpression: [\"argument\"],\r\n  ObjectProperty: [\"value\"],\r\n  AssignmentPattern: [\"left\"],\r\n  ArrayPattern: [\"elements\"],\r\n  ObjectPattern: [\"properties\"],\r\n  VariableDeclaration: [\"declarations\"],\r\n  VariableDeclarator: [\"id\"]\r\n};"]},"metadata":{},"sourceType":"script"}