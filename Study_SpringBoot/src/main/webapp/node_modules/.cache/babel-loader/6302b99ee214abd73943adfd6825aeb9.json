{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _generated2 = require(\"../builders/generated\");\n\nvar _default = toStatement;\nexports.default = _default;\n\nfunction toStatement(node, ignore) {\n  if ((0, _generated.isStatement)(node)) {\n    return node;\n  }\n\n  let mustHaveId = false;\n  let newType;\n\n  if ((0, _generated.isClass)(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if ((0, _generated.isFunction)(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if ((0, _generated.isAssignmentExpression)(node)) {\n    return (0, _generated2.expressionStatement)(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(`cannot turn ${node.type} to a statement`);\n    }\n  }\n\n  node.type = newType;\n  return node;\n}","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/node_modules/@babel/types/lib/converters/toStatement.js"],"names":["Object","defineProperty","exports","value","default","_generated","require","_generated2","_default","toStatement","node","ignore","isStatement","mustHaveId","newType","isClass","isFunction","isAssignmentExpression","expressionStatement","id","Error","type"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAIC,WAAW,GAAGD,OAAO,CAAC,uBAAD,CAAzB;;AAEA,IAAIE,QAAQ,GAAGC,WAAf;AACAP,OAAO,CAACE,OAAR,GAAkBI,QAAlB;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,MAA3B,EAAmC;AACjC,MAAI,CAAC,GAAGN,UAAU,CAACO,WAAf,EAA4BF,IAA5B,CAAJ,EAAuC;AACrC,WAAOA,IAAP;AACD;;AAED,MAAIG,UAAU,GAAG,KAAjB;AACA,MAAIC,OAAJ;;AAEA,MAAI,CAAC,GAAGT,UAAU,CAACU,OAAf,EAAwBL,IAAxB,CAAJ,EAAmC;AACjCG,IAAAA,UAAU,GAAG,IAAb;AACAC,IAAAA,OAAO,GAAG,kBAAV;AACD,GAHD,MAGO,IAAI,CAAC,GAAGT,UAAU,CAACW,UAAf,EAA2BN,IAA3B,CAAJ,EAAsC;AAC3CG,IAAAA,UAAU,GAAG,IAAb;AACAC,IAAAA,OAAO,GAAG,qBAAV;AACD,GAHM,MAGA,IAAI,CAAC,GAAGT,UAAU,CAACY,sBAAf,EAAuCP,IAAvC,CAAJ,EAAkD;AACvD,WAAO,CAAC,GAAGH,WAAW,CAACW,mBAAhB,EAAqCR,IAArC,CAAP;AACD;;AAED,MAAIG,UAAU,IAAI,CAACH,IAAI,CAACS,EAAxB,EAA4B;AAC1BL,IAAAA,OAAO,GAAG,KAAV;AACD;;AAED,MAAI,CAACA,OAAL,EAAc;AACZ,QAAIH,MAAJ,EAAY;AACV,aAAO,KAAP;AACD,KAFD,MAEO;AACL,YAAM,IAAIS,KAAJ,CAAW,eAAcV,IAAI,CAACW,IAAK,iBAAnC,CAAN;AACD;AACF;;AAEDX,EAAAA,IAAI,CAACW,IAAL,GAAYP,OAAZ;AACA,SAAOJ,IAAP;AACD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _generated = require(\"../validators/generated\");\r\n\r\nvar _generated2 = require(\"../builders/generated\");\r\n\r\nvar _default = toStatement;\r\nexports.default = _default;\r\n\r\nfunction toStatement(node, ignore) {\r\n  if ((0, _generated.isStatement)(node)) {\r\n    return node;\r\n  }\r\n\r\n  let mustHaveId = false;\r\n  let newType;\r\n\r\n  if ((0, _generated.isClass)(node)) {\r\n    mustHaveId = true;\r\n    newType = \"ClassDeclaration\";\r\n  } else if ((0, _generated.isFunction)(node)) {\r\n    mustHaveId = true;\r\n    newType = \"FunctionDeclaration\";\r\n  } else if ((0, _generated.isAssignmentExpression)(node)) {\r\n    return (0, _generated2.expressionStatement)(node);\r\n  }\r\n\r\n  if (mustHaveId && !node.id) {\r\n    newType = false;\r\n  }\r\n\r\n  if (!newType) {\r\n    if (ignore) {\r\n      return false;\r\n    } else {\r\n      throw new Error(`cannot turn ${node.type} to a statement`);\r\n    }\r\n  }\r\n\r\n  node.type = newType;\r\n  return node;\r\n}"]},"metadata":{},"sourceType":"script"}