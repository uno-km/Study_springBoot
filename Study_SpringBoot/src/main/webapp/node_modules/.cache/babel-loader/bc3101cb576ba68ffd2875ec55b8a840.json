{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhfld\\\\git\\\\Study_springBoot\\\\Study_SpringBoot\\\\src\\\\main\\\\webapp\\\\src\\\\js\\\\TodoList.js\";\nimport React from 'react';\nimport { ListItem, ListItemText, InputBase, Checkbox, ListItemSecondaryAction, IconButton } from \"@material-ui/core\";\nimport { DeleteOutline } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteEventHandler = () => {\n      this.delete(this.state.item);\n    };\n\n    this.offReadOnlyMode = () => {\n      console.log(\"Event! \", this.state.readOnly);\n      this.setState({\n        readOnly: false\n      }, () => {\n        console.log(\"ReadOnly ? \", this.state.readOnly);\n      });\n    };\n\n    this.enterKeyEventHandler = e => {\n      if (e.key === \"Enter\") {\n        this.setState({\n          readOnly: true\n        });\n        this.update(this.state.item); //엔터누르면 저장\n      }\n    };\n\n    this.editEventHandler = e => {\n      const thisItem = this.state.item;\n      thisItem.title = e.target.value;\n      this.setState({\n        item: thisItem\n      });\n    };\n\n    this.checkboxEventHandler = e => {\n      const thisItem = this.state.item;\n      thisItem.done = !thisItem.done;\n      this.setState({\n        item: thisItem\n      });\n      this.update(this.state.item); //체크박스가 변경되면 저장\n    };\n\n    this.state = {\n      item: props.item,\n      readOnly: true\n    };\n    this.delete = props.delete;\n    this.update = props.update; //update를 this.update에 할당\n  }\n\n  render() {\n    var item = this.state.item;\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: item.done,\n        onChange: this.checkboxEventHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        children: /*#__PURE__*/_jsxDEV(InputBase, {\n          inputProps: {\n            \"aria-label\": \"naked\",\n            readOnly: this.state.readOnly\n          },\n          onClick: this.offReadOnlyMode,\n          onKeyPress: this.enterKeyEventHandler,\n          onChange: this.editEventHandler,\n          type: \"text\",\n          id: item.id,\n          name: item.id,\n          value: item.title,\n          multiline: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          \"aria-label\": \"Delete Todo\",\n          onClick: this.deleteEventHandler,\n          children: /*#__PURE__*/_jsxDEV(DeleteOutline, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/src/js/TodoList.js"],"names":["React","ListItem","ListItemText","InputBase","Checkbox","ListItemSecondaryAction","IconButton","DeleteOutline","TodoList","Component","constructor","props","deleteEventHandler","delete","state","item","offReadOnlyMode","console","log","readOnly","setState","enterKeyEventHandler","e","key","update","editEventHandler","thisItem","title","target","value","checkboxEventHandler","done","render","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {ListItem, ListItemText, InputBase, Checkbox, ListItemSecondaryAction, IconButton\r\n} from \"@material-ui/core\";\r\nimport { DeleteOutline } from '@material-ui/icons';\r\n\r\nclass TodoList extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { item: props.item,readOnly : true};\r\n        this.delete = props.delete;\r\n        this.update = props.update; //update를 this.update에 할당\r\n      }\r\n      deleteEventHandler = () => {\r\n        this.delete(this.state.item);\r\n      };\r\n      offReadOnlyMode = () => {\r\n          console.log(\"Event! \", this.state.readOnly)\r\n          this.setState({readOnly:false},()=>{\r\n              console.log(\"ReadOnly ? \" , this.state.readOnly)\r\n          });\r\n      }\r\n\r\n      enterKeyEventHandler = (e) => {\r\n        if (e.key === \"Enter\") {\r\n          this.setState({readOnly: true});\r\n          this.update(this.state.item); //엔터누르면 저장\r\n        }\r\n      };\r\n      editEventHandler = (e) => {\r\n          const thisItem = this.state.item;\r\n          thisItem.title = e.target.value;\r\n          this.setState({item:thisItem});\r\n      }\r\n      checkboxEventHandler = (e) => {\r\n        const thisItem = this.state.item;\r\n         thisItem.done = !thisItem.done;\r\n         this.setState({ item: thisItem });\r\n         this.update(this.state.item); //체크박스가 변경되면 저장\r\n        };\r\n      render(){\r\n        var item = this.state.item;\r\n        return (\r\n            <ListItem>\r\n                <Checkbox checked = {item.done} onChange = {this.checkboxEventHandler}/>\r\n                <ListItemText>\r\n                <InputBase\r\n                inputProps={{ \"aria-label\":\"naked\"\r\n                ,readOnly: this.state.readOnly\r\n                ,}}\r\n                onClick={this.offReadOnlyMode}\r\n                onKeyPress={this.enterKeyEventHandler}\r\n                onChange={this.editEventHandler}\r\n                type=\"text\"\r\n                id={item.id}\r\n                name={item.id}\r\n                value={item.title}\r\n                multiline={true}\r\n                fullWidth={true}\r\n                />\r\n                </ListItemText>\r\n                <ListItemSecondaryAction>\r\n                    <IconButton aria-label=\"Delete Todo\"\r\n                    onClick = {this.deleteEventHandler}>\r\n                            <DeleteOutline/>\r\n                    </IconButton>\r\n                </ListItemSecondaryAction>\r\n            </ListItem>\r\n        );\r\n    }\r\n\r\n}\r\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}