{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zhfld\\\\git\\\\Study_springBoot\\\\Study_SpringBoot\\\\src\\\\main\\\\webapp\\\\src\\\\js\\\\todo\\\\App.js\";\nimport React from 'react';\nimport TodoList from './TodoList';\nimport AddTodo from './AddTodo';\nimport { Paper, List, Container, Grid, Button, AppBar, Toolbar, Typography } from \"@material-ui/core\";\nimport '../../css/App.css';\nimport { call, signout } from '../service/ApiService';\nimport { throwStatement } from '@babel/types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar todoURL = \"/todo\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.add = item => {\n      call(todoURL, \"POST\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.delete = item => {\n      call(todoURL, \"DELETE\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.update = item => {\n      call(todoURL, \"PUT\", item).then(response => this.setState({\n        items: response.data\n      }));\n    };\n\n    this.state = {\n      items: [],\n\n      /*(로딩중이라는 상태를 표현할 변수를 생성자에 상태 변수를 추가합니다.)*/\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    /*componetDidMount에서 Todo리스트를 가져오는 Get요청이 성공적으로 리턴하는 경우 loading을 false로 고칩니다. \r\n    더 이상 로딩중이 아니라는 뜻이 됩니다.*/\n    call(todoURL, \"GET\", null).then(response => this.setState({\n      items: response.data,\n      loading: false\n    }));\n  }\n\n  render() {\n    var todoItems = this.state.items.length > 0 && /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        margin: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        children: this.state.items.map((item, idx) => /*#__PURE__*/_jsxDEV(TodoList, {\n          item: item,\n          delete: this.delete,\n          update: this.update\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this); //navigationBar 추가\n\n\n    var navigationBar = /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          justify: \"space-between\",\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: \"\\uC624\\uB298\\uC758 \\uD560\\uC77C :: TO DO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"inherit\",\n              onClick: signout,\n              children: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n\n    var todoListPage = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [navigationBar, /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n    /*로딩 중일 때 렌더링 부분 */\n\n\n    var loadingPage = /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" \\uB85C\\uB529\\uC911..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 23\n    }, this);\n\n    var content = loadingPage;\n\n    if (!this.state.loading) {\n      /*로딩 중이 아니면 todoListPage를 선택*/\n      content = todoListPage;\n    } //props로 넘겨주기\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [navigationBar, /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n          add: this.add\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"TodoList\",\n          children: todoItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/src/js/todo/App.js"],"names":["React","TodoList","AddTodo","Paper","List","Container","Grid","Button","AppBar","Toolbar","Typography","call","signout","throwStatement","todoURL","App","Component","constructor","props","add","item","then","response","setState","items","data","delete","update","state","loading","componentDidMount","render","todoItems","length","margin","map","idx","id","navigationBar","todoListPage","loadingPage","content"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TodoList from './TodoList';\r\nimport AddTodo from './AddTodo';\r\nimport { Paper, List, Container,Grid,Button,AppBar,Toolbar,Typography }  from \"@material-ui/core\";\r\nimport '../../css/App.css';\r\nimport { call,signout } from '../service/ApiService';\r\nimport { throwStatement } from '@babel/types';\r\n\r\nvar todoURL = \"/todo\";\r\n\r\nclass App extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n       items : [],\r\n       /*(로딩중이라는 상태를 표현할 변수를 생성자에 상태 변수를 추가합니다.)*/\r\n        loading: true,\r\n      };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    /*componetDidMount에서 Todo리스트를 가져오는 Get요청이 성공적으로 리턴하는 경우 loading을 false로 고칩니다. \r\n    더 이상 로딩중이 아니라는 뜻이 됩니다.*/\r\n    call(todoURL, \"GET\", null).then((response) =>\r\n      this.setState({ items: response.data, loading: false })\r\n    );\r\n  }\r\n\r\n  add = (item) => {\r\n    call(todoURL, \"POST\", item).then((response) =>\r\n      this.setState({ items: response.data })\r\n    );\r\n  };\r\n\r\n  delete = (item) => {\r\n    call(todoURL, \"DELETE\", item).then((response) =>\r\n      this.setState({ items: response.data })\r\n    );\r\n  };\r\n\r\n  update = (item) => {\r\n    call(todoURL, \"PUT\", item).then((response) =>\r\n      this.setState({ items: response.data })\r\n    );\r\n  };\r\n\r\n  render() {\r\n    var todoItems = this.state.items.length > 0 && (\r\n      <Paper style={{ margin: 16 }}>\r\n        <List>\r\n          {this.state.items.map((item, idx) => (\r\n            <TodoList\r\n              item={item}\r\n              key={item.id}\r\n              delete={this.delete}\r\n              update={this.update}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Paper>\r\n    );\r\n    //navigationBar 추가\r\n    var navigationBar = (\r\n      <AppBar position='static'>\r\n      <Toolbar>\r\n      <Grid justify=\"space-between\" container>\r\n          <Grid item>\r\n            <Typography variant=\"h6\">오늘의 할일 :: TO DO</Typography>\r\n          </Grid>\r\n          <Grid>\r\n            <Button color=\"inherit\" onClick={signout}>\r\n              로그아웃\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n        \r\n      </AppBar>\r\n    );\r\n    var todoListPage=(\r\n      <div>\r\n        {navigationBar}{/*내비게이션 바 렌더링*/}\r\n          <Container maxWidth=\"md\">\r\n            <AddTodo add={this.add}/>\r\n            <div className='TodoList'>{todoItems}</div>\r\n          </Container>\r\n      </div>\r\n    )\r\n    /*로딩 중일 때 렌더링 부분 */\r\n    var loadingPage = <h1> 로딩중..</h1>;\r\n    var content = loadingPage;\r\n    if(!this.state.loading){\r\n      /*로딩 중이 아니면 todoListPage를 선택*/\r\n      content=todoListPage;\r\n    }\r\n    //props로 넘겨주기\r\n    return (\r\n      <div className=\"App\">\r\n        {navigationBar}{/*내비게이션 바 렌더링*/}\r\n        <Container maxWidth=\"md\">\r\n          <AddTodo add={this.add} />\r\n          <div className=\"TodoList\">{todoItems}</div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n \r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}