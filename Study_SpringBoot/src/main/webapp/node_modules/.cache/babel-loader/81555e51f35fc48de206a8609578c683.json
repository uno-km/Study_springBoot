{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _generated = require(\"../validators/generated\");\n\nvar _default = toExpression;\nexports.default = _default;\n\nfunction toExpression(node) {\n  if ((0, _generated.isExpressionStatement)(node)) {\n    node = node.expression;\n  }\n\n  if ((0, _generated.isExpression)(node)) {\n    return node;\n  }\n\n  if ((0, _generated.isClass)(node)) {\n    node.type = \"ClassExpression\";\n  } else if ((0, _generated.isFunction)(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (!(0, _generated.isExpression)(node)) {\n    throw new Error(`cannot turn ${node.type} to an expression`);\n  }\n\n  return node;\n}","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/node_modules/@babel/types/lib/converters/toExpression.js"],"names":["Object","defineProperty","exports","value","default","_generated","require","_default","toExpression","node","isExpressionStatement","expression","isExpression","isClass","type","isFunction","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AAEA,IAAIC,QAAQ,GAAGC,YAAf;AACAN,OAAO,CAACE,OAAR,GAAkBG,QAAlB;;AAEA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,MAAI,CAAC,GAAGJ,UAAU,CAACK,qBAAf,EAAsCD,IAAtC,CAAJ,EAAiD;AAC/CA,IAAAA,IAAI,GAAGA,IAAI,CAACE,UAAZ;AACD;;AAED,MAAI,CAAC,GAAGN,UAAU,CAACO,YAAf,EAA6BH,IAA7B,CAAJ,EAAwC;AACtC,WAAOA,IAAP;AACD;;AAED,MAAI,CAAC,GAAGJ,UAAU,CAACQ,OAAf,EAAwBJ,IAAxB,CAAJ,EAAmC;AACjCA,IAAAA,IAAI,CAACK,IAAL,GAAY,iBAAZ;AACD,GAFD,MAEO,IAAI,CAAC,GAAGT,UAAU,CAACU,UAAf,EAA2BN,IAA3B,CAAJ,EAAsC;AAC3CA,IAAAA,IAAI,CAACK,IAAL,GAAY,oBAAZ;AACD;;AAED,MAAI,CAAC,CAAC,GAAGT,UAAU,CAACO,YAAf,EAA6BH,IAA7B,CAAL,EAAyC;AACvC,UAAM,IAAIO,KAAJ,CAAW,eAAcP,IAAI,CAACK,IAAK,mBAAnC,CAAN;AACD;;AAED,SAAOL,IAAP;AACD","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = void 0;\r\n\r\nvar _generated = require(\"../validators/generated\");\r\n\r\nvar _default = toExpression;\r\nexports.default = _default;\r\n\r\nfunction toExpression(node) {\r\n  if ((0, _generated.isExpressionStatement)(node)) {\r\n    node = node.expression;\r\n  }\r\n\r\n  if ((0, _generated.isExpression)(node)) {\r\n    return node;\r\n  }\r\n\r\n  if ((0, _generated.isClass)(node)) {\r\n    node.type = \"ClassExpression\";\r\n  } else if ((0, _generated.isFunction)(node)) {\r\n    node.type = \"FunctionExpression\";\r\n  }\r\n\r\n  if (!(0, _generated.isExpression)(node)) {\r\n    throw new Error(`cannot turn ${node.type} to an expression`);\r\n  }\r\n\r\n  return node;\r\n}"]},"metadata":{},"sourceType":"script"}