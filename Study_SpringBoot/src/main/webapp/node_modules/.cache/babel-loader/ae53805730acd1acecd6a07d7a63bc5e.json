{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = traverseFast;\n\nvar _definitions = require(\"../definitions\");\n\nfunction traverseFast(node, enter, opts) {\n  if (!node) return;\n  const keys = _definitions.VISITOR_KEYS[node.type];\n  if (!keys) return;\n  opts = opts || {};\n  enter(node, opts);\n\n  for (const key of keys) {\n    const subNode = node[key];\n\n    if (Array.isArray(subNode)) {\n      for (const node of subNode) {\n        traverseFast(node, enter, opts);\n      }\n    } else {\n      traverseFast(subNode, enter, opts);\n    }\n  }\n}","map":{"version":3,"sources":["C:/Users/zhfld/git/Study_springBoot/Study_SpringBoot/src/main/webapp/node_modules/@babel/types/lib/traverse/traverseFast.js"],"names":["Object","defineProperty","exports","value","default","traverseFast","_definitions","require","node","enter","opts","keys","VISITOR_KEYS","type","key","subNode","Array","isArray"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA1B;;AAEA,SAASF,YAAT,CAAsBG,IAAtB,EAA4BC,KAA5B,EAAmCC,IAAnC,EAAyC;AACvC,MAAI,CAACF,IAAL,EAAW;AACX,QAAMG,IAAI,GAAGL,YAAY,CAACM,YAAb,CAA0BJ,IAAI,CAACK,IAA/B,CAAb;AACA,MAAI,CAACF,IAAL,EAAW;AACXD,EAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACAD,EAAAA,KAAK,CAACD,IAAD,EAAOE,IAAP,CAAL;;AAEA,OAAK,MAAMI,GAAX,IAAkBH,IAAlB,EAAwB;AACtB,UAAMI,OAAO,GAAGP,IAAI,CAACM,GAAD,CAApB;;AAEA,QAAIE,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAJ,EAA4B;AAC1B,WAAK,MAAMP,IAAX,IAAmBO,OAAnB,EAA4B;AAC1BV,QAAAA,YAAY,CAACG,IAAD,EAAOC,KAAP,EAAcC,IAAd,CAAZ;AACD;AACF,KAJD,MAIO;AACLL,MAAAA,YAAY,CAACU,OAAD,EAAUN,KAAV,EAAiBC,IAAjB,CAAZ;AACD;AACF;AACF","sourcesContent":["\"use strict\";\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.default = traverseFast;\r\n\r\nvar _definitions = require(\"../definitions\");\r\n\r\nfunction traverseFast(node, enter, opts) {\r\n  if (!node) return;\r\n  const keys = _definitions.VISITOR_KEYS[node.type];\r\n  if (!keys) return;\r\n  opts = opts || {};\r\n  enter(node, opts);\r\n\r\n  for (const key of keys) {\r\n    const subNode = node[key];\r\n\r\n    if (Array.isArray(subNode)) {\r\n      for (const node of subNode) {\r\n        traverseFast(node, enter, opts);\r\n      }\r\n    } else {\r\n      traverseFast(subNode, enter, opts);\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"script"}